<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Pandas学习笔记---001</title>
    <url>/2020/05/28/Pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0---001/</url>
    <content><![CDATA[<h1 id="Pandas学习笔记-——001"><a href="#Pandas学习笔记-——001" class="headerlink" title="Pandas学习笔记 ——001"></a>Pandas学习笔记 ——001</h1><h2 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h2><blockquote>
<p>Series：带标签的一维数组<br>DataFrame：带标签的，大小可变的，二维异构表格</p>
</blockquote>
<hr>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 生成Series</span></span><br><span class="line">s = pd.Series([<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, np.nan, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line">print(s)</span><br><span class="line"><span class="number">0</span>    <span class="number">1.0</span></span><br><span class="line"><span class="number">1</span>    <span class="number">3.0</span></span><br><span class="line"><span class="number">2</span>    <span class="number">5.0</span></span><br><span class="line"><span class="number">3</span>    NaN</span><br><span class="line"><span class="number">4</span>    <span class="number">6.0</span></span><br><span class="line"><span class="number">5</span>    <span class="number">8.0</span></span><br><span class="line">dtype: float64</span><br></pre></td></tr></table></figure>
<h2 id="2-使用技巧"><a href="#2-使用技巧" class="headerlink" title="2. 使用技巧"></a>2. 使用技巧</h2><h3 id="1-sort-indedx和sort-value"><a href="#1-sort-indedx和sort-value" class="headerlink" title="1. sort_indedx和sort_value"></a>1. sort_indedx和sort_value</h3><blockquote>
<p>sort_index(axis=0, level=None, ascending=True, inplace=False, kind=‘quicksort’, na_position=‘last’, sort_remaining=True, ignore_index: bool = False,)<br>axis:0按行名排序，1按列名排序<br>ascending：默认True升序排列；False降序排列<br>inplace：默认False，否则排序之后的数据直接替换原来的数据框<br>kind：排序方法，{‘quicksort’, ‘mergesort’, ‘heapsort’}, default ‘quicksort’。似乎不用太关心<br>na_position：缺失值默认排在最后{“first”,“last”}       </p>
</blockquote>
<hr>
<blockquote>
<p> sort_values(by, axis=0, ascending=True, inplace=False, kind=”quicksort”, na_position=”last”, ignore_index=False)<br>by: str or list of str；如果axis=0，那么by=”列名”；如果axis=1，那么by=”行名” # 必须给出参数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = pd.DataFrame(&#123;<span class="string">'b'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>],<span class="string">'a'</span>:[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>],<span class="string">'c'</span>:[<span class="number">1</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>]&#125;,index=[<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>]) </span><br><span class="line">    b   a   c</span><br><span class="line"><span class="number">2</span>   <span class="number">1</span>   <span class="number">4</span>   <span class="number">1</span></span><br><span class="line"><span class="number">0</span>   <span class="number">2</span>   <span class="number">3</span>   <span class="number">3</span></span><br><span class="line"><span class="number">1</span>   <span class="number">3</span>   <span class="number">2</span>   <span class="number">8</span></span><br><span class="line"><span class="number">3</span>   <span class="number">2</span>   <span class="number">1</span>   <span class="number">2</span></span><br><span class="line">按b列升序排序: df.sort_values(by=<span class="string">'b'</span>) <span class="comment"># 等同于df.sort_values(by='b',axis=0)</span></span><br><span class="line">先按b列降序,再按a列升序排序: df.sort_values(by=[<span class="string">'b'</span>,<span class="string">'a'</span>],axis=<span class="number">0</span>,ascending=[<span class="literal">False</span>,<span class="literal">True</span>]) <span class="comment"># 等同于df.sort_values(by=['b','a'],axis=0,ascending=[False,True])      </span></span><br><span class="line">按行<span class="number">3</span>升序排列: df.sort_values(by=<span class="number">3</span>,axis=<span class="number">1</span>) <span class="comment"># 必须指定axis=1     </span></span><br><span class="line">按行<span class="number">3</span>升序,行<span class="number">0</span>降排列:  df.sort_values(by=[<span class="number">3</span>,<span class="number">0</span>],axis=<span class="number">1</span>,ascending=[<span class="literal">True</span>,<span class="literal">False</span>])</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="2-对于无效数据的处理"><a href="#2-对于无效数据的处理" class="headerlink" title="2. 对于无效数据的处理"></a>2. 对于无效数据的处理</h3><blockquote>
<p>空值：在pandas中的空值是””<br>缺失值：在dataframe中为nan或者naT（缺失时间），在series中为none或者nan即可<br>相关函数： df.dropna()、df.fillna()、df.isnull()、df.isna()</p>
<blockquote>
<p>函数： df.dropna(axis=0, how=’any’, thresh=None, subset=None, inplace=False)<br>删除表中<strong>全部</strong>为NaN的<strong>行</strong>: df.dropna(axis=0,how=’all’)<br>删除表中<strong>含有任何</strong>NaN的<strong>行</strong>： df.dropna(axis=0,how=’any’)<br>删除表中<strong>全部</strong>为NaN的<strong>列</strong>： df.dropna(axis=1,how=’all’)<br>删除表中<strong>含有任何</strong>NaN的<strong>列</strong>:  df.dropna(axis=1,how=’any’)<br>thresh(int): axis中至少有int个非缺失值，否则删除<br>subset: array-like, optional,Labels along other axis to consider, e.g. if you are dropping rows these would be a list of columns to include.  </p>
<hr>
<p>函数： df.fillna(self, value=None, method=None, axis=None, inplace=False, limit=None, downcast=None)<br>method{‘backfill’, ‘bfill’, ‘pad’, ‘ffill’, None}, default None 说明用前面数据‘ffill’/‘pad’替换后面NaN数据 ‘backfill’/‘bfill’则相反          </p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Pandas学习笔记---002</title>
    <url>/2020/05/31/Pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0---002/</url>
    <content><![CDATA[<h1 id="Pandas学习笔记—002"><a href="#Pandas学习笔记—002" class="headerlink" title="Pandas学习笔记—002"></a>Pandas学习笔记—002</h1><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><h3 id="1-df-head-n-和-df-tail"><a href="#1-df-head-n-和-df-tail" class="headerlink" title="1. df.head(n) 和 df.tail()"></a>1. df.head(n) 和 df.tail()</h3><blockquote>
<p>默认n=5，同时n还可以取负值，对于head来说就是展示df[:-n],对于tail来说就是展示df[-n:]   </p>
</blockquote>
<h3 id="2-合并重叠数据集"><a href="#2-合并重叠数据集" class="headerlink" title="2. 合并重叠数据集"></a>2. 合并重叠数据集</h3><blockquote>
<p>有时，要合并两个相似的数据集，两个数据集里的其中一个的数据比另一个多。<br>比如，展示特定经济指标的两个数据序列，其中一个是“高质量”指标，<a id="more"></a><br>另一个是“低质量”指标。一般来说，低质量序列可能包含更多的历史数据，或覆盖更广的数据。<br>因此，要合并这两个 DataFrame 对象，其中一个 DataFrame 中的缺失值将按指定条件用另一个<br>DataFrame 里类似标签中的数据进行填充。                    </p>
<blockquote>
<p>函数df1.combine_first(df2): 由df2只填df1的NaN值    </p>
</blockquote>
</blockquote>
<h3 id="3-描述性统计"><a href="#3-描述性统计" class="headerlink" title="3. 描述性统计"></a>3. 描述性统计</h3><table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">count</td>
<td align="center">统计非空值数量</td>
</tr>
<tr>
<td align="center">sum</td>
<td align="center">汇总值</td>
</tr>
<tr>
<td align="center">mean</td>
<td align="center">平均值</td>
</tr>
<tr>
<td align="center">mad</td>
<td align="center">平均绝对偏差</td>
</tr>
<tr>
<td align="center">median</td>
<td align="center">算数中位数</td>
</tr>
<tr>
<td align="center">min</td>
<td align="center">最小值</td>
</tr>
<tr>
<td align="center">max</td>
<td align="center">最大值</td>
</tr>
<tr>
<td align="center">mode</td>
<td align="center">众数</td>
</tr>
<tr>
<td align="center">abs</td>
<td align="center">绝对值</td>
</tr>
<tr>
<td align="center">prod</td>
<td align="center">乘积</td>
</tr>
<tr>
<td align="center">std</td>
<td align="center">贝塞尔校正的样本标准偏差</td>
</tr>
<tr>
<td align="center">var</td>
<td align="center">无偏方差</td>
</tr>
<tr>
<td align="center">sem</td>
<td align="center">平均值的标准误差</td>
</tr>
<tr>
<td align="center">skew</td>
<td align="center">样本偏度 (第三阶)</td>
</tr>
<tr>
<td align="center">kurt</td>
<td align="center">样本峰度 (第四阶)</td>
</tr>
<tr>
<td align="center">quantile</td>
<td align="center">样本分位数 (不同 % 的值)</td>
</tr>
<tr>
<td align="center">cumsum</td>
<td align="center">累加</td>
</tr>
<tr>
<td align="center">cumprod</td>
<td align="center">累乘</td>
</tr>
<tr>
<td align="center">cummax</td>
<td align="center">累积最大值</td>
</tr>
<tr>
<td align="center">cummin</td>
<td align="center">累积最小值</td>
</tr>
<tr>
<td align="center">describe</td>
<td align="center">数据总描述</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Pandas</tag>
        <tag>Python</tag>
      </tags>
  </entry>
</search>
